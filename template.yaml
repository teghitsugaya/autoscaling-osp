heat_template_version: 2016-10-14
description: Example auto scale group, policy, and alarm

resources:
  scaleup_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 300
      desired_capacity: 1
      max_size: 3
      min_size: 1
      resource:
        type: OS::Nova::Server::Instance
        properties:
          metadata:
            metering.server_group: { get_param: "OS::stack_id" }

  scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: scaleup_group }
      cooldown: 300
      scaling_adjustment: 1

  scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: scaleup_group }
      cooldown: 300
      scaling_adjustment: -1

  cpu_alarm_high:
    type: OS::Aodh::GnocchiAggregationByResourcesAlarm
    properties:
      description: Scale up if CPU > 60%
      metric: cpu
      aggregation_method: rate:mean
      granularity: 300
      evaluation_periods: 1 
        #threshold: 240000000000.0   #80%
        #threshold: 210000000000.0   #70%
      threshold: 180000000000.0   #60%
        #threshold: 150000000000.0   #50%
      resource_type: instance
      comparison_operator: gt 
      alarm_actions:
        - str_replace:
            template: trust+url
            params:
              url: { get_attr: [scaleup_policy, signal_url] }
      query:
        str_replace:
          template: '{"=": {"server_group": "stack_id"}}'
          params:
            stack_id: { get_param: "OS::stack_id" }

  cpu_alarm_low:
    type: OS::Aodh::GnocchiAggregationByResourcesAlarm
    properties:
      description: Scale down if CPU > 10%
      metric: cpu
      aggregation_method: rate:mean
      granularity: 300
      evaluation_periods: 3
        #threshold: 45000000000.0  #15%
      threshold: 30000000000.0  #10%
        #threshold: 15000000000.0  #5%
      resource_type: instance
      comparison_operator: lt 
      alarm_actions:
        - str_replace:
            template: trust+url
            params:
              url: { get_attr: [scaledown_policy, signal_url] }
      query:
        str_replace:
          template: '{"=": {"server_group": "stack_id"}}'
          params:
            stack_id: { get_param: "OS::stack_id" }

outputs:
  scaleup_policy_signal_url:
    value: { get_attr: [scaleup_policy, signal_url] }

  scaledown_policy_signal_url:
    value: { get_attr: [scaledown_policy, signal_url] }

